---
import Section from "../Section.astro";
import { getLangFromUrl, useTranslations, getCV } from "@/i18n/utils";
import type { Language } from "@/i18n/types";

interface Props {
  lang?: Language;
}

const { lang } = Astro.props;
const currentLang = lang || getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);
const cvData = await getCV(currentLang);

// Usar los datos del CV seg√∫n el idioma actual
const { work } = cvData;
---

<Section title={t("section.experience")}>
  <ul>
    {
      work.map(
        ({ name, startDate, endDate, position, summary, highlights, url }) => {
          const startYear = new Date(startDate).getFullYear();
          const endYear =
            endDate != null
              ? new Date(endDate).getFullYear()
              : t("date.present");

          return (
            <li>
              <article>
                <header>
                  <div>
                    <h3>
                      <a
                        href={url}
                        title={`${t("contact.visit")} ${name}`}
                        target="_blank"
                      >
                        {name}
                      </a>
                    </h3>
                    <h4>{position}</h4>
                  </div>

                  <div>
                    <time datetime={startDate} data-title={startDate}>
                      {startYear}
                    </time>
                    {" - "}
                    <time datetime={endDate} data-title={endDate}>
                      {endYear}
                    </time>
                  </div>
                </header>

                <footer>
                  <p>{summary}</p>
                </footer>
              </article>
            </li>
          );
        }
      )
    }
  </ul>
</Section>

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  article h3 {
    font-weight: 500;
    color: var(--text-primary);
  }

  article a {
    color: var(--text-primary);
  }

  article a:hover {
    text-decoration: underline;
  }

  article h4 {
    color: var(--text-secondary);
    font-weight: 400;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: var(--text-muted);
    font-size: 0.85rem;
    min-width: 102px;
    cursor: default;
  }

  [data-title]:hover:after {
    opacity: 1;
    transition: all 0.1s ease-in-out 0.5s;
    visibility: visible;
  }

  [data-title]:after {
    content: attr(data-title);
    background-color: #333;
    color: #fff;
    font-size: 0.75rem;
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      "Courier New",
      monospace;
    position: absolute;
    padding: 0.2rem 0.5rem;
    bottom: -1.4rem;
    left: 50%;
    white-space: nowrap;
    box-shadow: 1px 1px 1px #222222;
    opacity: 0;
    border: 1px solid #111111;
    z-index: 99999;
    visibility: hidden;
    border-radius: 6px;
  }

  [data-title] {
    position: relative;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>
